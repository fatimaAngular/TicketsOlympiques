@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@model TicketsJO.Models.Event

@{
    ViewData["Title"] = "Details";
}
    

<div class="row mb-2">
    <div class="row-md-4">
        <div class="row g-0 border rounded overflow-hidden flex-md-row mb-4 shadow-sm h-md-250 position-relative">
            <div class="col p-4 d-flex flex-column position-static">
                <h2 class="mb-0 text-primary">@Model.Name  </h2>
                <p class="card-text mb-auto">
                    <br /> @Model.Description                 
                   
                </p>

                <div class="mb-1 text-body-secondary"> <strong>Date :</strong> @(Model.DateEvent.HasValue ? Model.DateEvent.Value.ToString("dd MMMM yyyy 'à' H:mm", new System.Globalization.CultureInfo("fr-FR")) : "Non spécifié")</div>
                <p class="card-text mb-auto"><strong>Lieu :</strong> @Html.DisplayFor(model => model.AdresseEvent)</p>
            </div>
             <div class="col-auto d-none d-lg-block">
                <img src="~/images/Event.png" width="100%" height="300" />
            </div>
        </div>       
    </div>
</div>



<div class="container mt-3">
    <h2 class="pb-2 border-bottom">Liste des offres</h2>
    @if (Model.Offres != null && Model.Offres.Any())
    {
        <div class="row row-cols-1 row-cols-md-3 mb-3 text-center">


            @foreach (var item in Model.Offres)
            {
                <div class="row mb-2">
                    <div class="row-md-6">
                        <div class="row g-0 border rounded overflow-hidden flex-md-row mb-4 shadow-sm h-md-250 position-relative">
                            <div class="col p-4 d-flex flex-column position-static">                              
                                <h3 class="mb-0">@Html.DisplayFor(modelItem => item.Description)</h3>
                                <div class="mb-1 text-body-secondary">@Html.DisplayFor(modelItem => item.Prix)</div>
                                <p class="card-text mb-auto">@Html.DisplayFor(modelItem => item.Description)</p>
                                    <h4>@Html.DisplayFor(modelItem => item.OffreID)</h4>
                                <p class="w-280 btn btn-outline-dark">
                                        @Html.ActionLink("Ajouter au panier", "AddToCart", "ShoppingCart", new { id = item.OffreID }, "")
                                    </p>
                            </div>
                            <div class="col-auto d-none d-lg-block">
                                <img src="~/images/offre.png" width="60" height="120" />
                            </div>
                        </div>
                    </div>
                </div>               
            }
        </div>
    }
    else
    {
        <p>Aucune offre disponible actuellement pour cet événement</p>       
    }
    @if (SignInManager.IsSignedIn(User) && (User.IsInRole("Admin")))

    {
        <a class="btn btn-primary" asp-controller="Offres" asp-action="Create">Ajouter une offre</a>
    }
</div>

<div class="mt-3">
    @if (User != null)

    {

        @if (SignInManager.IsSignedIn(User) && (User.IsInRole("Admin")))

        {

            <a class="btn btn-primary" asp-action="Edit" asp-route-id="@Model?.Id">Modifier l'évènement</a>

        }


    }
    <a asp-action="Index" class="btn btn-outline-dark">Retour au menu</a>
</div>
